{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/tiko/Desktop/Ready/Sandbox/src/components/Chart.js\";\n\nimport React from 'react';\nimport { CChartLine } from '@coreui/react-chartjs';\nimport { getStyle, hexToRgba } from '@coreui/utils/src';\nvar brandInfo = getStyle('info') || '#20a8d8';\n\nvar MainChart = function MainChart(attributes) {\n  var random = function random(min, max) {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  };\n\n  var defaultDatasets = function () {\n    var elements = 27;\n    var data = [];\n\n    for (var i = 0; i <= elements; i++) {\n      data.push(random(80, 100));\n    }\n\n    return [{\n      label: 'My First dataset',\n      backgroundColor: hexToRgba(brandInfo, 10),\n      borderColor: brandInfo,\n      pointHoverBackgroundColor: brandInfo,\n      borderWidth: 2,\n      data: data\n    }];\n  }();\n\n  var defaultOptions = function () {\n    return {\n      maintainAspectRatio: false,\n      legend: {\n        display: false\n      },\n      scales: {\n        xAxes: [{\n          gridLines: {\n            drawOnChartArea: false\n          }\n        }],\n        yAxes: [{\n          ticks: {\n            beginAtZero: true,\n            maxTicksLimit: 5,\n            stepSize: Math.ceil(250 / 5),\n            max: 250\n          },\n          gridLines: {\n            display: true\n          }\n        }]\n      },\n      elements: {\n        point: {\n          radius: 0,\n          hitRadius: 10,\n          hoverRadius: 4,\n          hoverBorderWidth: 3\n        }\n      }\n    };\n  }(); // render\n\n\n  return /*#__PURE__*/React.createElement(CChartLine, Object.assign({}, attributes, {\n    datasets: defaultDatasets,\n    options: defaultOptions,\n    labels: ['Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su'],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }));\n};\n\nexport default MainChart;","map":{"version":3,"sources":["/home/tiko/Desktop/Ready/Sandbox/src/components/Chart.js"],"names":["React","CChartLine","getStyle","hexToRgba","brandInfo","MainChart","attributes","random","min","max","Math","floor","defaultDatasets","elements","data","i","push","label","backgroundColor","borderColor","pointHoverBackgroundColor","borderWidth","defaultOptions","maintainAspectRatio","legend","display","scales","xAxes","gridLines","drawOnChartArea","yAxes","ticks","beginAtZero","maxTicksLimit","stepSize","ceil","point","radius","hitRadius","hoverRadius","hoverBorderWidth"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { CChartLine } from '@coreui/react-chartjs'\nimport { getStyle, hexToRgba } from '@coreui/utils/src'\n\nconst brandInfo = getStyle('info') || '#20a8d8'\n\nconst MainChart = attributes => {\n  const random = (min, max)=>{\n    return Math.floor(Math.random() * (max - min + 1) + min)\n  }\n\n  const defaultDatasets = (()=>{\n    let elements = 27\n    const data= []\n    for (let i = 0; i <= elements; i++) {\n      data.push(random(80, 100))\n    }\n    return [\n      {\n        label: 'My First dataset',\n        backgroundColor: hexToRgba(brandInfo, 10),\n        borderColor: brandInfo,\n        pointHoverBackgroundColor: brandInfo,\n        borderWidth: 2,\n        data: data\n      }\n    ]\n  })()\n\n  const defaultOptions = (()=>{\n      return {\n        maintainAspectRatio: false,\n        legend: {\n          display: false\n        },\n        scales: {\n          xAxes: [{\n            gridLines: {\n              drawOnChartArea: false\n            }\n          }],\n          yAxes: [{\n            ticks: {\n              beginAtZero: true,\n              maxTicksLimit: 5,\n              stepSize: Math.ceil(250 / 5),\n              max: 250\n            },\n            gridLines: {\n              display: true\n            }\n          }]\n        },\n        elements: {\n          point: {\n            radius: 0,\n            hitRadius: 10,\n            hoverRadius: 4,\n            hoverBorderWidth: 3\n          }\n        }\n      }\n    }\n  )()\n\n  // render\n  return (\n    <CChartLine\n      {...attributes}\n      datasets={defaultDatasets}\n      options={defaultOptions}\n      labels={['Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su']}\n    />\n  )\n}\n\n\nexport default MainChart\n"]},"metadata":{},"sourceType":"module"}