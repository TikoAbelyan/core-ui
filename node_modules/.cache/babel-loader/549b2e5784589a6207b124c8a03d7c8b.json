{"ast":null,"code":"import _slicedToArray from \"/home/tiko/Desktop/Ready/Sandbox/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/tiko/Desktop/Ready/Sandbox/src/pages/Dashboard.js\";\n\nimport React from \"react\";\nimport moment from \"moment\";\nimport { CButtonGroup, CCard, CCardBody, CCardFooter, CCol, CProgress, CRow } from \"@coreui/react\"; //Chart\n//Components\n\nimport DatePicker from \"../components/DatePicker\";\nimport Chart from \"../components/Chart\";\n\nvar Dashboard = function Dashboard() {\n  var _React$useState = React.useState({\n    startDate: null,\n    endDate: null\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      date = _React$useState2[0],\n      setDate = _React$useState2[1];\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      arr = _React$useState4[0],\n      setNewrr = _React$useState4[1];\n\n  var submitFunction = function submitFunction(startDate, endDate) {\n    var startArr = moment(startDate).format(\"YYYY/M/DD\").split(\"/\");\n    var endArr = moment(endDate).format(\"YYYY/M/DD\").split(\"/\");\n    var requestBody = {\n      searchDateEnd: {\n        day: endArr[2],\n        month: endArr[1],\n        year: endArr[0]\n      },\n      searchDateStart: {\n        day: startArr[2],\n        month: startArr[1],\n        year: startArr[0]\n      },\n      deviceType: \"WELL\",\n      measurementType: \"NORMAL\"\n    };\n    fetch(\"http://mesurit.com:8086/api/data/search/\", {\n      method: \"POST\",\n      mode: \"cors\",\n      credentials: \"same-origin\",\n      headers: {\n        Authorization: \"Basic \".concat(btoa(\"Guest:WaterFlow\")),\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(requestBody)\n    }).then(function (res) {\n      return res.json();\n    }).then(function (res) {\n      return console.log(res);\n    });\n    setNewrr([{\n      chartConfig: {\n        input: 1,\n        chartType: \"column\",\n        textToShow: \"Well\",\n        inputType: \"Well\",\n        dateFormat: \"%s/%s/%s %s:%s\"\n      },\n      data: [[\"01/08/20 00:00\", 595], [\"02/08/20 00:00\", 975], [\"03/08/20 00:00\", 1032], [\"04/08/20 00:00\", 2408], [\"05/08/20 00:00\", 1875], [\"06/08/20 00:00\", 338], [\"07/08/20 00:00\", 799], [\"08/08/20 00:00\", 1293], [\"09/08/20 00:00\", 899], [\"10/08/20 00:00\", 845], [\"11/08/20 00:00\", 15], [\"12/08/20 00:00\", 1579], [\"13/08/20 00:00\", 1095], [\"14/08/20 00:00\", 1221], [\"15/08/20 00:00\", 775]]\n    }]);\n  };\n\n  var d2 = moment([\"01/08/20 00:00\"]);\n  console.log(\"aaaaaa=>>>\", d2.format(\"ddd\"));\n\n  function submitFilter(_ref) {\n    var startDate = _ref.startDate,\n        endDate = _ref.endDate;\n\n    if (endDate !== date.endDate) {\n      submitFunction(startDate, endDate);\n    }\n\n    setDate({\n      startDate: startDate,\n      endDate: endDate\n    });\n  } // console.log(\"wtf\", arr);\n\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CCard, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CCardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CRow, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    sm: \"5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    id: \"traffic\",\n    className: \"card-title mb-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 15\n    }\n  }, \"Traffic\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"small text-muted\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 15\n    }\n  }, \"November 2017\")), /*#__PURE__*/React.createElement(CCol, {\n    sm: \"7\",\n    className: \"d-none d-md-block\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CButtonGroup, {\n    className: \"float-right mr-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(DatePicker, {\n    submitFilter: submitFilter,\n    date: date,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(Chart, {\n    arr: arr,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(CCardFooter, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CRow, {\n    className: \"text-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: true,\n    sm: \"12\",\n    className: \"mb-sm-2 mb-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-muted\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }\n  }, \"Well\"), /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 15\n    }\n  }, \"1500\"), /*#__PURE__*/React.createElement(CProgress, {\n    className: \"progress-xs mt-2\",\n    precision: 1,\n    color: \"info\",\n    value: 90,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 15\n    }\n  }))))));\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["/home/tiko/Desktop/Ready/Sandbox/src/pages/Dashboard.js"],"names":["React","moment","CButtonGroup","CCard","CCardBody","CCardFooter","CCol","CProgress","CRow","DatePicker","Chart","Dashboard","useState","startDate","endDate","date","setDate","arr","setNewrr","submitFunction","startArr","format","split","endArr","requestBody","searchDateEnd","day","month","year","searchDateStart","deviceType","measurementType","fetch","method","mode","credentials","headers","Authorization","btoa","body","JSON","stringify","then","res","json","console","log","chartConfig","input","chartType","textToShow","inputType","dateFormat","data","d2","submitFilter"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport moment from \"moment\";\n\nimport {\n  CButtonGroup,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCol,\n  CProgress,\n  CRow,\n} from \"@coreui/react\";\n//Chart\n//Components\nimport DatePicker from \"../components/DatePicker\";\nimport Chart from \"../components/Chart\";\n\nconst Dashboard = () => {\n  const [date, setDate] = React.useState({ startDate: null, endDate: null });\n  const [arr, setNewrr] = React.useState([]);\n\n  const submitFunction = (startDate, endDate) => {\n    const startArr = moment(startDate).format(\"YYYY/M/DD\").split(\"/\");\n    const endArr = moment(endDate).format(\"YYYY/M/DD\").split(\"/\");\n\n    const requestBody = {\n      searchDateEnd: {\n        day: endArr[2],\n        month: endArr[1],\n        year: endArr[0],\n      },\n      searchDateStart: {\n        day: startArr[2],\n        month: startArr[1],\n        year: startArr[0],\n      },\n      deviceType: \"WELL\",\n      measurementType: \"NORMAL\",\n    };\n\n    fetch(\"http://mesurit.com:8086/api/data/search/\", {\n      method: \"POST\",\n      mode: \"cors\",\n      credentials: \"same-origin\",\n      headers: {\n        Authorization: `Basic ${btoa(`Guest:WaterFlow`)}`,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(requestBody),\n    })\n      .then((res) => res.json())\n      .then((res) => console.log(res));\n    setNewrr([\n      {\n        chartConfig: {\n          input: 1,\n          chartType: \"column\",\n          textToShow: \"Well\",\n          inputType: \"Well\",\n          dateFormat: \"%s/%s/%s %s:%s\",\n        },\n        data: [\n          [\"01/08/20 00:00\", 595],\n          [\"02/08/20 00:00\", 975],\n          [\"03/08/20 00:00\", 1032],\n          [\"04/08/20 00:00\", 2408],\n          [\"05/08/20 00:00\", 1875],\n          [\"06/08/20 00:00\", 338],\n          [\"07/08/20 00:00\", 799],\n          [\"08/08/20 00:00\", 1293],\n          [\"09/08/20 00:00\", 899],\n          [\"10/08/20 00:00\", 845],\n          [\"11/08/20 00:00\", 15],\n          [\"12/08/20 00:00\", 1579],\n          [\"13/08/20 00:00\", 1095],\n          [\"14/08/20 00:00\", 1221],\n          [\"15/08/20 00:00\", 775],\n        ],\n      },\n    ]);\n  };\n  let d2 = moment([\"01/08/20 00:00\"]);\n\n  console.log(\"aaaaaa=>>>\", d2.format(\"ddd\"));\n  function submitFilter({ startDate, endDate }) {\n    if (endDate !== date.endDate) {\n      submitFunction(startDate, endDate);\n    }\n\n    setDate({ startDate, endDate });\n  }\n  // console.log(\"wtf\", arr);\n  return (\n    <>\n      <CCard>\n        <CCardBody>\n          <CRow>\n            <CCol sm=\"5\">\n              <h4 id=\"traffic\" className=\"card-title mb-0\">\n                Traffic\n              </h4>\n              <div className=\"small text-muted\">November 2017</div>\n            </CCol>\n            <CCol sm=\"7\" className=\"d-none d-md-block\">\n              <CButtonGroup className=\"float-right mr-3\">\n                <DatePicker submitFilter={submitFilter} date={date} />\n              </CButtonGroup>\n            </CCol>\n          </CRow>\n          <Chart arr={arr} />\n        </CCardBody>\n        <CCardFooter>\n          <CRow className=\"text-center\">\n            <CCol md sm=\"12\" className=\"mb-sm-2 mb-0\">\n              <div className=\"text-muted\">Well</div>\n              <strong>1500</strong>\n              <CProgress\n                className=\"progress-xs mt-2\"\n                precision={1}\n                color=\"info\"\n                value={90}\n              />\n            </CCol>\n          </CRow>\n        </CCardFooter>\n      </CCard>\n    </>\n  );\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}