{"ast":null,"code":"import _slicedToArray from \"/home/tiko/Desktop/Ready/Sandbox/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/tiko/Desktop/Ready/Sandbox/src/components/DatePicker.js\";\n\nimport React from \"react\";\nimport moment from \"moment\";\nimport \"react-dates/initialize\";\nimport { DateRangePicker } from \"react-dates\";\nimport \"react-dates/lib/css/_datepicker.css\";\nimport { CCard, CCardHeader, CCardBody, CBadge } from \"@coreui/react\";\n\nvar DatePicker = function DatePicker() {\n  var _React$useState = React.useState({\n    startDate: null,\n    endDate: null\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      date = _React$useState2[0],\n      setDate = _React$useState2[1];\n\n  var _React$useState3 = React.useState(),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      focused = _React$useState4[0],\n      setFocused = _React$useState4[1]; // const [num, setNum] = React.useState({\n  //   deviceType: \"WELL\",\n  //   measurementType: \"NORMAL\",\n  //   searchDateEnd: {\n  //     day: \"\",\n  //     month: \"\",\n  //     year: \"\",\n  //   },\n  //   searchDateStart: {\n  //     day: \"\",\n  //     month: \"\",\n  //     year: \"\",\n  //   },\n  // });\n\n\n  var submitFunction = function submitFunction(startDate, endDate) {\n    var startArr = moment(startDate).format(\"YYYY/M/DD\").split(\"/\");\n    var endArr = moment(endDate).format(\"YYYY/M/DD\").split(\"/\");\n    var requestBody = {\n      searchDateEnd: {\n        day: endArr[2],\n        month: endArr[1],\n        year: endArr[0]\n      },\n      searchDateStart: {\n        day: startArr[2],\n        month: startArr[1],\n        year: startArr[0]\n      },\n      deviceType: \"WELL\",\n      measurementType: \"NORMAL\"\n    };\n    fetch(\"http://mesurit.com:8086/api/data/search\", {\n      method: \"POST\",\n      mode: \"no-cors\",\n      credentials: \"same-origin\",\n      headers: {\n        Authorization: \"Basic \".concat(btoa(\"Guest:WaterFlow\")),\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(requestBody)\n    }).then(function (res) {\n      return res.json();\n    }).then(function (res) {\n      return console.log(res);\n    });\n  };\n\n  function submitFilter(_ref) {\n    var startDate = _ref.startDate,\n        endDate = _ref.endDate;\n\n    if (endDate !== date.endDate) {\n      submitFunction(startDate, endDate);\n    }\n\n    setDate({\n      startDate: startDate,\n      endDate: endDate\n    });\n  }\n\n  React.useEffect(function () {// setNum((prev) => ({\n    //   ...prev,\n    //   searchDateEnd: {\n    //     // day: moment(date.endDate).format(\"DD\"),\n    //     // month: moment(date.endDate).format(\"M\"),\n    //     // year: moment(date.endDate).format(\"YYYY\"),\n    //   },\n    //   searchDateStart: {\n    //     // day: moment(date.startDate).format(\"DD\"),\n    //     // month: moment(date.startDate).format(\"M\"),\n    //     year: aa.split(\"/\")[2],\n    //   },\n    // }));\n  }, []); // console.log(Object.keys(num).join(\"\"));\n  // console.log(aa.split(\"/\"));\n  // const v = date.startDate;\n  // console.log(moment());\n  // conso.3le.log(\"obj created =>\", obj);\n\n  return /*#__PURE__*/React.createElement(DateRangePicker, {\n    startDate: date.startDate,\n    startDateId: \"startDate\",\n    endDate: date.endDate,\n    endDateId: \"endDate\",\n    onDatesChange: function onDatesChange(value) {\n      return submitFilter(value);\n    },\n    focusedInput: focused,\n    onFocusChange: function onFocusChange(focusedInput) {\n      return setFocused(focusedInput);\n    },\n    orientation: \"horizontal\",\n    openDirection: \"down\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default DatePicker;","map":{"version":3,"sources":["/home/tiko/Desktop/Ready/Sandbox/src/components/DatePicker.js"],"names":["React","moment","DateRangePicker","CCard","CCardHeader","CCardBody","CBadge","DatePicker","useState","startDate","endDate","date","setDate","focused","setFocused","submitFunction","startArr","format","split","endArr","requestBody","searchDateEnd","day","month","year","searchDateStart","deviceType","measurementType","fetch","method","mode","credentials","headers","Authorization","btoa","body","JSON","stringify","then","res","json","console","log","submitFilter","useEffect","value","focusedInput"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAO,wBAAP;AACA,SAASC,eAAT,QAAgC,aAAhC;AACA,OAAO,qCAAP;AACA,SAASC,KAAT,EAAgBC,WAAhB,EAA6BC,SAA7B,EAAwCC,MAAxC,QAAsD,eAAtD;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AAAA,wBACCP,KAAK,CAACQ,QAAN,CAAe;AAAEC,IAAAA,SAAS,EAAE,IAAb;AAAmBC,IAAAA,OAAO,EAAE;AAA5B,GAAf,CADD;AAAA;AAAA,MAChBC,IADgB;AAAA,MACVC,OADU;;AAAA,yBAEOZ,KAAK,CAACQ,QAAN,EAFP;AAAA;AAAA,MAEhBK,OAFgB;AAAA,MAEPC,UAFO,wBAGvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACN,SAAD,EAAYC,OAAZ,EAAwB;AAC7C,QAAMM,QAAQ,GAAGf,MAAM,CAACQ,SAAD,CAAN,CAAkBQ,MAAlB,CAAyB,WAAzB,EAAsCC,KAAtC,CAA4C,GAA5C,CAAjB;AACA,QAAMC,MAAM,GAAGlB,MAAM,CAACS,OAAD,CAAN,CAAgBO,MAAhB,CAAuB,WAAvB,EAAoCC,KAApC,CAA0C,GAA1C,CAAf;AAEA,QAAME,WAAW,GAAG;AAClBC,MAAAA,aAAa,EAAE;AACbC,QAAAA,GAAG,EAAEH,MAAM,CAAC,CAAD,CADE;AAEbI,QAAAA,KAAK,EAAEJ,MAAM,CAAC,CAAD,CAFA;AAGbK,QAAAA,IAAI,EAAEL,MAAM,CAAC,CAAD;AAHC,OADG;AAMlBM,MAAAA,eAAe,EAAE;AACfH,QAAAA,GAAG,EAAEN,QAAQ,CAAC,CAAD,CADE;AAEfO,QAAAA,KAAK,EAAEP,QAAQ,CAAC,CAAD,CAFA;AAGfQ,QAAAA,IAAI,EAAER,QAAQ,CAAC,CAAD;AAHC,OANC;AAWlBU,MAAAA,UAAU,EAAE,MAXM;AAYlBC,MAAAA,eAAe,EAAE;AAZC,KAApB;AAeAC,IAAAA,KAAK,CAAC,yCAAD,EAA4C;AAC/CC,MAAAA,MAAM,EAAE,MADuC;AAE/CC,MAAAA,IAAI,EAAE,SAFyC;AAG/CC,MAAAA,WAAW,EAAE,aAHkC;AAI/CC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,kBAAWC,IAAI,mBAAf,CADN;AAEP,wBAAgB;AAFT,OAJsC;AAQ/CC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAejB,WAAf;AARyC,KAA5C,CAAL,CAUGkB,IAVH,CAUQ,UAACC,GAAD;AAAA,aAASA,GAAG,CAACC,IAAJ,EAAT;AAAA,KAVR,EAWGF,IAXH,CAWQ,UAACC,GAAD;AAAA,aAASE,OAAO,CAACC,GAAR,CAAYH,GAAZ,CAAT;AAAA,KAXR;AAYD,GA/BD;;AAiCA,WAASI,YAAT,OAA8C;AAAA,QAAtBlC,SAAsB,QAAtBA,SAAsB;AAAA,QAAXC,OAAW,QAAXA,OAAW;;AAC5C,QAAIA,OAAO,KAAKC,IAAI,CAACD,OAArB,EAA8B;AAC5BK,MAAAA,cAAc,CAACN,SAAD,EAAYC,OAAZ,CAAd;AACD;;AAEDE,IAAAA,OAAO,CAAC;AAAEH,MAAAA,SAAS,EAATA,SAAF;AAAaC,MAAAA,OAAO,EAAPA;AAAb,KAAD,CAAP;AACD;;AAEDV,EAAAA,KAAK,CAAC4C,SAAN,CAAgB,YAAM,CACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GAdD,EAcG,EAdH,EA3DuB,CA2EvB;AACA;AACA;AACA;AACA;;AACA,sBACE,oBAAC,eAAD;AACE,IAAA,SAAS,EAAEjC,IAAI,CAACF,SADlB;AAEE,IAAA,WAAW,EAAC,WAFd;AAGE,IAAA,OAAO,EAAEE,IAAI,CAACD,OAHhB;AAIE,IAAA,SAAS,EAAC,SAJZ;AAKE,IAAA,aAAa,EAAE,uBAACmC,KAAD;AAAA,aAAWF,YAAY,CAACE,KAAD,CAAvB;AAAA,KALjB;AAME,IAAA,YAAY,EAAEhC,OANhB;AAOE,IAAA,aAAa,EAAE,uBAACiC,YAAD;AAAA,aAAkBhC,UAAU,CAACgC,YAAD,CAA5B;AAAA,KAPjB;AAQE,IAAA,WAAW,EAAC,YARd;AASE,IAAA,aAAa,EAAC,MAThB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAaD,CA7FD;;AA+FA,eAAevC,UAAf","sourcesContent":["import React from \"react\";\nimport moment from \"moment\";\nimport \"react-dates/initialize\";\nimport { DateRangePicker } from \"react-dates\";\nimport \"react-dates/lib/css/_datepicker.css\";\nimport { CCard, CCardHeader, CCardBody, CBadge } from \"@coreui/react\";\n\nconst DatePicker = () => {\n  const [date, setDate] = React.useState({ startDate: null, endDate: null });\n  const [focused, setFocused] = React.useState();\n  // const [num, setNum] = React.useState({\n  //   deviceType: \"WELL\",\n  //   measurementType: \"NORMAL\",\n  //   searchDateEnd: {\n  //     day: \"\",\n  //     month: \"\",\n  //     year: \"\",\n  //   },\n  //   searchDateStart: {\n  //     day: \"\",\n  //     month: \"\",\n  //     year: \"\",\n  //   },\n  // });\n\n  const submitFunction = (startDate, endDate) => {\n    const startArr = moment(startDate).format(\"YYYY/M/DD\").split(\"/\");\n    const endArr = moment(endDate).format(\"YYYY/M/DD\").split(\"/\");\n\n    const requestBody = {\n      searchDateEnd: {\n        day: endArr[2],\n        month: endArr[1],\n        year: endArr[0],\n      },\n      searchDateStart: {\n        day: startArr[2],\n        month: startArr[1],\n        year: startArr[0],\n      },\n      deviceType: \"WELL\",\n      measurementType: \"NORMAL\",\n    };\n\n    fetch(\"http://mesurit.com:8086/api/data/search\", {\n      method: \"POST\",\n      mode: \"no-cors\",\n      credentials: \"same-origin\",\n      headers: {\n        Authorization: `Basic ${btoa(`Guest:WaterFlow`)}`,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(requestBody),\n    })\n      .then((res) => res.json())\n      .then((res) => console.log(res));\n  };\n\n  function submitFilter({ startDate, endDate }) {\n    if (endDate !== date.endDate) {\n      submitFunction(startDate, endDate);\n    }\n\n    setDate({ startDate, endDate });\n  }\n\n  React.useEffect(() => {\n    // setNum((prev) => ({\n    //   ...prev,\n    //   searchDateEnd: {\n    //     // day: moment(date.endDate).format(\"DD\"),\n    //     // month: moment(date.endDate).format(\"M\"),\n    //     // year: moment(date.endDate).format(\"YYYY\"),\n    //   },\n    //   searchDateStart: {\n    //     // day: moment(date.startDate).format(\"DD\"),\n    //     // month: moment(date.startDate).format(\"M\"),\n    //     year: aa.split(\"/\")[2],\n    //   },\n    // }));\n  }, []);\n\n  // console.log(Object.keys(num).join(\"\"));\n  // console.log(aa.split(\"/\"));\n  // const v = date.startDate;\n  // console.log(moment());\n  // conso.3le.log(\"obj created =>\", obj);\n  return (\n    <DateRangePicker\n      startDate={date.startDate}\n      startDateId=\"startDate\"\n      endDate={date.endDate}\n      endDateId=\"endDate\"\n      onDatesChange={(value) => submitFilter(value)}\n      focusedInput={focused}\n      onFocusChange={(focusedInput) => setFocused(focusedInput)}\n      orientation=\"horizontal\"\n      openDirection=\"down\"\n    />\n  );\n};\n\nexport default DatePicker;\n"]},"metadata":{},"sourceType":"module"}