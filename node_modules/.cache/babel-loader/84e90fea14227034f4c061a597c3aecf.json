{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/tiko/Desktop/Ready/Sandbox/src/components/Chart.js\";\n\nimport React from \"react\";\nimport { CChartLine } from \"@coreui/react-chartjs\";\nimport { getStyle, hexToRgba } from \"@coreui/utils/src\";\nvar brandInfo = getStyle(\"info\") || \"#20a8d8\";\n\nvar MainChart = function MainChart(attributes) {\n  var random = function random(min, max) {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  };\n\n  var defaultDatasets = function () {\n    var elements = 27;\n    var data = [];\n\n    for (var i = 0; i <= elements; i++) {\n      data.push(random(80, 220));\n    }\n\n    console.log(data);\n    return [{\n      label: \"My First dataset\",\n      backgroundColor: hexToRgba(brandInfo, 10),\n      borderColor: brandInfo,\n      pointHoverBackgroundColor: brandInfo,\n      borderWidth: 2,\n      data: data\n    }];\n  }();\n\n  var defaultOptions = function () {\n    return {\n      maintainAspectRatio: false,\n      legend: {\n        display: false\n      },\n      scales: {\n        xAxes: [{\n          gridLines: {\n            drawOnChartArea: false\n          }\n        }],\n        yAxes: [{\n          ticks: {\n            beginAtZero: true,\n            maxTicksLimit: 5,\n            stepSize: Math.ceil(250 / 5),\n            max: 5000\n          },\n          gridLines: {\n            display: true\n          }\n        }]\n      },\n      elements: {\n        point: {\n          radius: 0,\n          hitRadius: 10,\n          hoverRadius: 4,\n          hoverBorderWidth: 3\n        }\n      }\n    };\n  }(); // render\n\n\n  return /*#__PURE__*/React.createElement(CChartLine, Object.assign({}, attributes, {\n    datasets: defaultDatasets,\n    options: defaultOptions,\n    labels: [\"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\", \"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\", \"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\", \"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\", \"Su\"],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }));\n};\n\nexport default MainChart;","map":{"version":3,"sources":["/home/tiko/Desktop/Ready/Sandbox/src/components/Chart.js"],"names":["React","CChartLine","getStyle","hexToRgba","brandInfo","MainChart","attributes","random","min","max","Math","floor","defaultDatasets","elements","data","i","push","console","log","label","backgroundColor","borderColor","pointHoverBackgroundColor","borderWidth","defaultOptions","maintainAspectRatio","legend","display","scales","xAxes","gridLines","drawOnChartArea","yAxes","ticks","beginAtZero","maxTicksLimit","stepSize","ceil","point","radius","hitRadius","hoverRadius","hoverBorderWidth"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { CChartLine } from \"@coreui/react-chartjs\";\nimport { getStyle, hexToRgba } from \"@coreui/utils/src\";\n\nconst brandInfo = getStyle(\"info\") || \"#20a8d8\";\n\nconst MainChart = (attributes) => {\n  const random = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  };\n\n  const defaultDatasets = (() => {\n    let elements = 27;\n    const data = [];\n    for (let i = 0; i <= elements; i++) {\n      data.push(random(80, 220));\n    }\n    console.log(data);\n    return [\n      {\n        label: \"My First dataset\",\n        backgroundColor: hexToRgba(brandInfo, 10),\n        borderColor: brandInfo,\n        pointHoverBackgroundColor: brandInfo,\n        borderWidth: 2,\n        data: data,\n      },\n    ];\n  })();\n\n  const defaultOptions = (() => {\n    return {\n      maintainAspectRatio: false,\n      legend: {\n        display: false,\n      },\n      scales: {\n        xAxes: [\n          {\n            gridLines: {\n              drawOnChartArea: false,\n            },\n          },\n        ],\n        yAxes: [\n          {\n            ticks: {\n              beginAtZero: true,\n              maxTicksLimit: 5,\n              stepSize: Math.ceil(250 / 5),\n              max: 5000,\n            },\n            gridLines: {\n              display: true,\n            },\n          },\n        ],\n      },\n      elements: {\n        point: {\n          radius: 0,\n          hitRadius: 10,\n          hoverRadius: 4,\n          hoverBorderWidth: 3,\n        },\n      },\n    };\n  })();\n\n  // render\n  return (\n    <CChartLine\n      {...attributes}\n      datasets={defaultDatasets}\n      options={defaultOptions}\n      labels={[\n        \"Mo\",\n        \"Tu\",\n        \"We\",\n        \"Th\",\n        \"Fr\",\n        \"Sa\",\n        \"Su\",\n        \"Mo\",\n        \"Tu\",\n        \"We\",\n        \"Th\",\n        \"Fr\",\n        \"Sa\",\n        \"Su\",\n        \"Mo\",\n        \"Tu\",\n        \"We\",\n        \"Th\",\n        \"Fr\",\n        \"Sa\",\n        \"Su\",\n        \"Mo\",\n        \"Tu\",\n        \"We\",\n        \"Th\",\n        \"Fr\",\n        \"Sa\",\n        \"Su\",\n      ]}\n    />\n  );\n};\n\nexport default MainChart;\n"]},"metadata":{},"sourceType":"module"}