{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/tiko/Desktop/Ready/Sandbox/src/components/Chart.js\";\n\nimport React from \"react\";\nimport { CChartLine } from \"@coreui/react-chartjs\";\nimport { getStyle, hexToRgba } from \"@coreui/utils/src\";\nimport { number } from \"prop-types\";\nvar brandInfo = getStyle(\"info\") || \"#20a8d8\";\n\nvar MainChart = function MainChart(_ref) {\n  var attributes = _ref.attributes,\n      newarr = _ref.newarr;\n\n  var random = function random(min, max) {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  }; // console.log(\"newarr =>\", newarr && newarr[0] && newarr[0].data);\n  // const arr = newarr && newarr[0] && newarr[0].data;\n  // console.log(\"xujan\", xujan);\n  // const arr = [\n  //   {\n  //     chartConfig: {\n  //       input: 1,\n  //       chartType: \"column\",\n  //       textToShow: \"Well\",\n  //       inputType: \"Well\",\n  //       dateFormat: \"%s/%s/%s %s:%s\",\n  //     },\n  //     data: [\n  //       [\"01/08/20 00:00\", 595],\n  //       [\"02/08/20 00:00\", 975],\n  //       [\"03/08/20 00:00\", 1032],\n  //       [\"04/08/20 00:00\", 2408],\n  //       [\"05/08/20 00:00\", 1875],\n  //       [\"06/08/20 00:00\", 338],\n  //       [\"07/08/20 00:00\", 799],\n  //       [\"08/08/20 00:00\", 1293],\n  //       [\"09/08/20 00:00\", 899],\n  //       [\"10/08/20 00:00\", 845],\n  //       [\"11/08/20 00:00\", 15],\n  //       [\"12/08/20 00:00\", 1579],\n  //       [\"13/08/20 00:00\", 1095],\n  //       [\"14/08/20 00:00\", 1221],\n  //       [\"15/08/20 00:00\", 775],\n  //     ],\n  //   },\n  // ];\n  // console.log(\"nerqevi arrr\", arr[0].data);\n\n\n  var pz = []; // for (let p = 0; p <= arr[0].data.length; p++) {\n  //   console.log(\"checking =>\", arr[0].data[p]);\n  // }\n  // console.log(\"arr\", arr[0].data[0][1]);\n  // console.log(\"length\", arr[0].data.length);\n  // arr.map((item, index) => console.log(pz.push(item.data[index][1])));\n  // console.log(pz);\n\n  for (var i = 0; i < arr && arr[0] && arr[0].data.length; i++) {\n    // get the size of the inner array\n    var innerArrayLength = arr[0].data[i].length; // loop the inner array\n\n    for (var j = 0; j < innerArrayLength; j++) {\n      // console.log(arr[0].data[i][j]);\n      pz.push(arr[0].data[i][j]);\n    }\n  }\n\n  console.log(pz);\n  var arr5 = [];\n  var arr6 = [];\n\n  for (var x = 0; x < pz.length; x += 2) {\n    arr5.push(pz[x]);\n  }\n\n  for (var _x = 1; _x < pz.length; _x += 2) {\n    arr6.push(pz[_x]);\n  }\n\n  console.log(\"arr5=>\", arr5);\n  console.log(\"arr6=>\", arr6);\n\n  var defaultDatasets = function () {\n    var elements = 27;\n    var data = [];\n\n    for (var _i = 0; _i <= elements; _i++) {\n      data.push.apply(data, arr6);\n    } // console.log(data);\n\n\n    return [{\n      label: \"My First dataset\",\n      backgroundColor: hexToRgba(brandInfo, 10),\n      borderColor: brandInfo,\n      pointHoverBackgroundColor: brandInfo,\n      borderWidth: 2,\n      data: data\n    }];\n  }();\n\n  var defaultOptions = function () {\n    return {\n      maintainAspectRatio: false,\n      legend: {\n        display: false\n      },\n      scales: {\n        xAxes: [{\n          gridLines: {\n            drawOnChartArea: false\n          }\n        }],\n        yAxes: [{\n          ticks: {\n            beginAtZero: true,\n            maxTicksLimit: 5,\n            stepSize: Math.ceil(250 / 5),\n            max: 2000\n          },\n          gridLines: {\n            display: true\n          }\n        }]\n      },\n      elements: {\n        point: {\n          radius: 0,\n          hitRadius: 10,\n          hoverRadius: 4,\n          hoverBorderWidth: 3\n        }\n      }\n    };\n  }();\n\n  var azz = [\"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\", \"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\", \"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\", \"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\", \"Su\"];\n  console.log(\"refer\", arr6); // render\n\n  return /*#__PURE__*/React.createElement(CChartLine, Object.assign({}, attributes, {\n    datasets: defaultDatasets,\n    options: defaultOptions,\n    labels: arr5,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 5\n    }\n  }));\n};\n\nexport default MainChart;","map":{"version":3,"sources":["/home/tiko/Desktop/Ready/Sandbox/src/components/Chart.js"],"names":["React","CChartLine","getStyle","hexToRgba","number","brandInfo","MainChart","attributes","newarr","random","min","max","Math","floor","pz","i","arr","data","length","innerArrayLength","j","push","console","log","arr5","arr6","x","defaultDatasets","elements","label","backgroundColor","borderColor","pointHoverBackgroundColor","borderWidth","defaultOptions","maintainAspectRatio","legend","display","scales","xAxes","gridLines","drawOnChartArea","yAxes","ticks","beginAtZero","maxTicksLimit","stepSize","ceil","point","radius","hitRadius","hoverRadius","hoverBorderWidth","azz"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { CChartLine } from \"@coreui/react-chartjs\";\nimport { getStyle, hexToRgba } from \"@coreui/utils/src\";\nimport { number } from \"prop-types\";\n\nconst brandInfo = getStyle(\"info\") || \"#20a8d8\";\n\nconst MainChart = ({ attributes, newarr }) => {\n  const random = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  };\n  // console.log(\"newarr =>\", newarr && newarr[0] && newarr[0].data);\n  // const arr = newarr && newarr[0] && newarr[0].data;\n  // console.log(\"xujan\", xujan);\n  // const arr = [\n  //   {\n  //     chartConfig: {\n  //       input: 1,\n  //       chartType: \"column\",\n  //       textToShow: \"Well\",\n  //       inputType: \"Well\",\n  //       dateFormat: \"%s/%s/%s %s:%s\",\n  //     },\n  //     data: [\n  //       [\"01/08/20 00:00\", 595],\n  //       [\"02/08/20 00:00\", 975],\n  //       [\"03/08/20 00:00\", 1032],\n  //       [\"04/08/20 00:00\", 2408],\n  //       [\"05/08/20 00:00\", 1875],\n  //       [\"06/08/20 00:00\", 338],\n  //       [\"07/08/20 00:00\", 799],\n  //       [\"08/08/20 00:00\", 1293],\n  //       [\"09/08/20 00:00\", 899],\n  //       [\"10/08/20 00:00\", 845],\n  //       [\"11/08/20 00:00\", 15],\n  //       [\"12/08/20 00:00\", 1579],\n  //       [\"13/08/20 00:00\", 1095],\n  //       [\"14/08/20 00:00\", 1221],\n  //       [\"15/08/20 00:00\", 775],\n  //     ],\n  //   },\n  // ];\n  // console.log(\"nerqevi arrr\", arr[0].data);\n  const pz = [];\n  // for (let p = 0; p <= arr[0].data.length; p++) {\n  //   console.log(\"checking =>\", arr[0].data[p]);\n  // }\n  // console.log(\"arr\", arr[0].data[0][1]);\n  // console.log(\"length\", arr[0].data.length);\n  // arr.map((item, index) => console.log(pz.push(item.data[index][1])));\n  // console.log(pz);\n  for (let i = 0; i < arr && arr[0] && arr[0].data.length; i++) {\n    // get the size of the inner array\n    var innerArrayLength = arr[0].data[i].length;\n    // loop the inner array\n    for (let j = 0; j < innerArrayLength; j++) {\n      // console.log(arr[0].data[i][j]);\n      pz.push(arr[0].data[i][j]);\n    }\n  }\n  console.log(pz);\n  const arr5 = [];\n  const arr6 = [];\n  for (let x = 0; x < pz.length; x += 2) {\n    arr5.push(pz[x]);\n  }\n  for (let x = 1; x < pz.length; x += 2) {\n    arr6.push(pz[x]);\n  }\n  console.log(\"arr5=>\", arr5);\n  console.log(\"arr6=>\", arr6);\n  const defaultDatasets = (() => {\n    let elements = 27;\n    const data = [];\n    for (let i = 0; i <= elements; i++) {\n      data.push(...arr6);\n    }\n    // console.log(data);\n    return [\n      {\n        label: \"My First dataset\",\n        backgroundColor: hexToRgba(brandInfo, 10),\n        borderColor: brandInfo,\n        pointHoverBackgroundColor: brandInfo,\n        borderWidth: 2,\n        data: data,\n      },\n    ];\n  })();\n\n  const defaultOptions = (() => {\n    return {\n      maintainAspectRatio: false,\n      legend: {\n        display: false,\n      },\n      scales: {\n        xAxes: [\n          {\n            gridLines: {\n              drawOnChartArea: false,\n            },\n          },\n        ],\n        yAxes: [\n          {\n            ticks: {\n              beginAtZero: true,\n              maxTicksLimit: 5,\n              stepSize: Math.ceil(250 / 5),\n              max: 2000,\n            },\n            gridLines: {\n              display: true,\n            },\n          },\n        ],\n      },\n      elements: {\n        point: {\n          radius: 0,\n          hitRadius: 10,\n          hoverRadius: 4,\n          hoverBorderWidth: 3,\n        },\n      },\n    };\n  })();\n  const azz = [\n    \"Mo\",\n    \"Tu\",\n    \"We\",\n    \"Th\",\n    \"Fr\",\n    \"Sa\",\n    \"Su\",\n    \"Mo\",\n    \"Tu\",\n    \"We\",\n    \"Th\",\n    \"Fr\",\n    \"Sa\",\n    \"Su\",\n    \"Mo\",\n    \"Tu\",\n    \"We\",\n    \"Th\",\n    \"Fr\",\n    \"Sa\",\n    \"Su\",\n    \"Mo\",\n    \"Tu\",\n    \"We\",\n    \"Th\",\n    \"Fr\",\n    \"Sa\",\n    \"Su\",\n  ];\n  console.log(\"refer\", arr6);\n  // render\n  return (\n    <CChartLine\n      {...attributes}\n      datasets={defaultDatasets}\n      options={defaultOptions}\n      labels={arr5}\n    />\n  );\n};\n\nexport default MainChart;\n"]},"metadata":{},"sourceType":"module"}