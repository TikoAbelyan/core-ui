{"ast":null,"code":"import _regeneratorRuntime from \"/home/tiko/Desktop/Ready/Sandbox/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/tiko/Desktop/Ready/Sandbox/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/tiko/Desktop/Ready/Sandbox/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/tiko/Desktop/Ready/Sandbox/src/components/DatePicker.js\";\n\nimport React from \"react\";\nimport moment from \"moment\";\nimport \"react-dates/initialize\";\nimport { DateRangePicker } from \"react-dates\";\nimport \"react-dates/lib/css/_datepicker.css\";\nimport { CCard, CCardHeader, CCardBody, CBadge } from \"@coreui/react\";\n\nvar DatePicker = function DatePicker() {\n  var _React$useState = React.useState({\n    startDate: null,\n    endDate: null\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      date = _React$useState2[0],\n      setDate = _React$useState2[1];\n\n  var _React$useState3 = React.useState(),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      focused = _React$useState4[0],\n      setFocused = _React$useState4[1]; // const [num, setNum] = React.useState({\n  //   deviceType: \"WELL\",\n  //   measurementType: \"NORMAL\",\n  //   searchDateEnd: {\n  //     day: \"\",\n  //     month: \"\",\n  //     year: \"\",\n  //   },\n  //   searchDateStart: {\n  //     day: \"\",\n  //     month: \"\",\n  //     year: \"\",\n  //   },\n  // });\n\n\n  function postData() {\n    return _postData.apply(this, arguments);\n  }\n\n  function _postData() {\n    _postData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var url,\n          data,\n          response,\n          param,\n          _args = arguments;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              url = _args.length > 0 && _args[0] !== undefined ? _args[0] : \"\";\n              data = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n              _context.next = 4;\n              return fetch(url, {\n                method: \"POST\",\n                // *GET, POST, PUT, DELETE, etc.\n                mode: \"cors\",\n                // no-cors, *cors, same-origin\n                cache: \"no-cache\",\n                // *default, no-cache, reload, force-cache, only-if-cached\n                credentials: \"same-origin\",\n                // include, *same-origin, omit\n                headers: {\n                  \"Content-Type\": \"application/json\",\n                  Authorization: \"Basic \".concat(btoa(\"Guest:WaterFlow\")) // 'Content-Type': 'application/x-www-form-urlencoded',\n\n                },\n                redirect: \"follow\",\n                // manual, *follow, error\n                referrerPolicy: \"no-referrer\",\n                // no-referrer, *client\n                body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n\n              });\n\n            case 4:\n              response = _context.sent;\n              _context.next = 7;\n              return response.json();\n\n            case 7:\n              param = _context.sent;\n              console.log(\"awaiting =>\", param);\n              return _context.abrupt(\"return\", param);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _postData.apply(this, arguments);\n  }\n\n  var submitFunction = function submitFunction(startDate, endDate) {\n    var startArr = moment(startDate).format(\"YYYY/M/DD\").split(\"/\");\n    var endArr = moment(endDate).format(\"YYYY/M/DD\").split(\"/\");\n    var requestBody = {\n      searchDateEnd: {\n        day: endArr[2],\n        month: endArr[1],\n        year: endArr[0]\n      },\n      searchDateStart: {\n        day: startArr[2],\n        month: startArr[1],\n        year: startArr[0]\n      },\n      deviceType: \"WELL\",\n      measurementType: \"NORMAL\"\n    };\n    postData(\"http://mesurit.com:8086/api/data/search\", {\n      requestBody: requestBody\n    }).then(function (data) {\n      console.log(\"data\", data); // JSON data parsed by `response.json()` call\n    }); // fetch(\"http://mesurit.com:8086/api/data/search\", {\n    //   method: \"POST\",\n    //   mode: \"cors\",\n    //   credentials: \"same-origin\",\n    //   headers: {\n    //     Authorization: `Basic ${btoa(`Guest:WaterFlow`)}`,\n    //     \"Content-Type\": \"application/json\",\n    //     \"Access-Control-Allow-Origin\": \"*\",\n    //   },\n    //   body: JSON.stringify(requestBody),\n    // })\n    //   .then((res) => res.json())\n    //   .then((res) => console.log(res));\n  };\n\n  function submitFilter(_ref) {\n    var startDate = _ref.startDate,\n        endDate = _ref.endDate;\n\n    if (endDate !== date.endDate) {\n      submitFunction(startDate, endDate);\n    }\n\n    setDate({\n      startDate: startDate,\n      endDate: endDate\n    });\n  }\n\n  React.useEffect(function () {// setNum((prev) => ({\n    //   ...prev,\n    //   searchDateEnd: {\n    //     // day: moment(date.endDate).format(\"DD\"),\n    //     // month: moment(date.endDate).format(\"M\"),\n    //     // year: moment(date.endDate).format(\"YYYY\"),\n    //   },\n    //   searchDateStart: {\n    //     // day: moment(date.startDate).format(\"DD\"),\n    //     // month: moment(date.startDate).format(\"M\"),\n    //     year: aa.split(\"/\")[2],\n    //   },\n    // }));\n  }, []); // console.log(Object.keys(num).join(\"\"));\n  // console.log(aa.split(\"/\"));\n  // const v = date.startDate;\n  // console.log(moment());\n  // conso.3le.log(\"obj created =>\", obj);\n\n  return /*#__PURE__*/React.createElement(DateRangePicker, {\n    startDate: date.startDate,\n    startDateId: \"startDate\",\n    endDate: date.endDate,\n    endDateId: \"endDate\",\n    onDatesChange: function onDatesChange(value) {\n      return submitFilter(value);\n    },\n    focusedInput: focused,\n    onFocusChange: function onFocusChange(focusedInput) {\n      return setFocused(focusedInput);\n    },\n    orientation: \"horizontal\",\n    openDirection: \"down\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default DatePicker;","map":{"version":3,"sources":["/home/tiko/Desktop/Ready/Sandbox/src/components/DatePicker.js"],"names":["React","moment","DateRangePicker","CCard","CCardHeader","CCardBody","CBadge","DatePicker","useState","startDate","endDate","date","setDate","focused","setFocused","postData","url","data","fetch","method","mode","cache","credentials","headers","Authorization","btoa","redirect","referrerPolicy","body","JSON","stringify","response","json","param","console","log","submitFunction","startArr","format","split","endArr","requestBody","searchDateEnd","day","month","year","searchDateStart","deviceType","measurementType","then","submitFilter","useEffect","value","focusedInput"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport moment from \"moment\";\nimport \"react-dates/initialize\";\nimport { DateRangePicker } from \"react-dates\";\nimport \"react-dates/lib/css/_datepicker.css\";\nimport { CCard, CCardHeader, CCardBody, CBadge } from \"@coreui/react\";\n\nconst DatePicker = () => {\n  const [date, setDate] = React.useState({ startDate: null, endDate: null });\n  const [focused, setFocused] = React.useState();\n  // const [num, setNum] = React.useState({\n  //   deviceType: \"WELL\",\n  //   measurementType: \"NORMAL\",\n  //   searchDateEnd: {\n  //     day: \"\",\n  //     month: \"\",\n  //     year: \"\",\n  //   },\n  //   searchDateStart: {\n  //     day: \"\",\n  //     month: \"\",\n  //     year: \"\",\n  //   },\n  // });\n\n  async function postData(url = \"\", data = {}) {\n    const response = await fetch(url, {\n      method: \"POST\", // *GET, POST, PUT, DELETE, etc.\n      mode: \"cors\", // no-cors, *cors, same-origin\n      cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: \"same-origin\", // include, *same-origin, omit\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Basic ${btoa(`Guest:WaterFlow`)}`,\n        // 'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      redirect: \"follow\", // manual, *follow, error\n      referrerPolicy: \"no-referrer\", // no-referrer, *client\n      body: JSON.stringify(data), // body data type must match \"Content-Type\" header\n    });\n    const param = await response.json();\n    console.log(\"awaiting =>\", param);\n    return param; // parses JSON response into native JavaScript objects\n  }\n\n  const submitFunction = (startDate, endDate) => {\n    const startArr = moment(startDate).format(\"YYYY/M/DD\").split(\"/\");\n    const endArr = moment(endDate).format(\"YYYY/M/DD\").split(\"/\");\n\n    const requestBody = {\n      searchDateEnd: {\n        day: endArr[2],\n        month: endArr[1],\n        year: endArr[0],\n      },\n      searchDateStart: {\n        day: startArr[2],\n        month: startArr[1],\n        year: startArr[0],\n      },\n      deviceType: \"WELL\",\n      measurementType: \"NORMAL\",\n    };\n    postData(\"http://mesurit.com:8086/api/data/search\", {\n      requestBody,\n    }).then((data) => {\n      console.log(\"data\", data); // JSON data parsed by `response.json()` call\n    });\n    // fetch(\"http://mesurit.com:8086/api/data/search\", {\n    //   method: \"POST\",\n    //   mode: \"cors\",\n    //   credentials: \"same-origin\",\n    //   headers: {\n    //     Authorization: `Basic ${btoa(`Guest:WaterFlow`)}`,\n    //     \"Content-Type\": \"application/json\",\n    //     \"Access-Control-Allow-Origin\": \"*\",\n    //   },\n    //   body: JSON.stringify(requestBody),\n    // })\n    //   .then((res) => res.json())\n    //   .then((res) => console.log(res));\n  };\n\n  function submitFilter({ startDate, endDate }) {\n    if (endDate !== date.endDate) {\n      submitFunction(startDate, endDate);\n    }\n\n    setDate({ startDate, endDate });\n  }\n\n  React.useEffect(() => {\n    // setNum((prev) => ({\n    //   ...prev,\n    //   searchDateEnd: {\n    //     // day: moment(date.endDate).format(\"DD\"),\n    //     // month: moment(date.endDate).format(\"M\"),\n    //     // year: moment(date.endDate).format(\"YYYY\"),\n    //   },\n    //   searchDateStart: {\n    //     // day: moment(date.startDate).format(\"DD\"),\n    //     // month: moment(date.startDate).format(\"M\"),\n    //     year: aa.split(\"/\")[2],\n    //   },\n    // }));\n  }, []);\n\n  // console.log(Object.keys(num).join(\"\"));\n  // console.log(aa.split(\"/\"));\n  // const v = date.startDate;\n  // console.log(moment());\n  // conso.3le.log(\"obj created =>\", obj);\n  return (\n    <DateRangePicker\n      startDate={date.startDate}\n      startDateId=\"startDate\"\n      endDate={date.endDate}\n      endDateId=\"endDate\"\n      onDatesChange={(value) => submitFilter(value)}\n      focusedInput={focused}\n      onFocusChange={(focusedInput) => setFocused(focusedInput)}\n      orientation=\"horizontal\"\n      openDirection=\"down\"\n    />\n  );\n};\n\nexport default DatePicker;\n"]},"metadata":{},"sourceType":"module"}