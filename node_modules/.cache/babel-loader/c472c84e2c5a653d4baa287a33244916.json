{"ast":null,"code":"import _toConsumableArray from \"/home/tiko/Desktop/Ready/Sandbox/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/tiko/Desktop/Ready/Sandbox/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/tiko/Desktop/Ready/Sandbox/src/components/Chart.js\";\n\nimport React from \"react\";\nimport { CChartLine } from \"@coreui/react-chartjs\";\nimport { getStyle, hexToRgba } from \"@coreui/utils/src\";\nvar brandInfo = getStyle(\"info\") || \"#20a8d8\";\nvar initialState = {\n  xAxis: [],\n  yAxis: []\n};\n\nvar MainChart = function MainChart(_ref) {\n  var chartData = _ref.chartData;\n\n  var _React$useState = React.useState(initialState),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      _React$useState2$ = _React$useState2[0],\n      xAxis = _React$useState2$.xAxis,\n      yAxis = _React$useState2$.yAxis,\n      setState = _React$useState2[1];\n\n  React.useEffect(function () {\n    setState(chartData.reduce(function (acc, _ref2) {\n      var _ref3 = _slicedToArray(_ref2, 2),\n          first = _ref3[0],\n          second = _ref3[1];\n\n      acc.xAxis.push(first);\n      acc.yAxis.push(second);\n      return acc;\n    }, {\n      xAxis: [],\n      yAxis: []\n    }));\n  }, [chartData]);\n\n  var defaultDatasets = function () {\n    var elements = 27;\n    var data = [];\n\n    for (var i = 0; i <= elements; i++) {\n      data.push.apply(data, _toConsumableArray(yAxis));\n    }\n\n    return [{\n      label: \"My First dataset\",\n      backgroundColor: hexToRgba(brandInfo, 10),\n      borderColor: brandInfo,\n      pointHoverBackgroundColor: brandInfo,\n      borderWidth: 2,\n      data: data\n    }];\n  }();\n\n  var defaultOptions = function () {\n    return {\n      maintainAspectRatio: false,\n      legend: {\n        display: false\n      },\n      scales: {\n        xAxes: [{\n          gridLines: {\n            drawOnChartArea: false\n          }\n        }],\n        yAxes: [{\n          ticks: {\n            beginAtZero: true,\n            maxTicksLimit: 5,\n            stepSize: Math.ceil(250 / 5),\n            max: 2000\n          },\n          gridLines: {\n            display: true\n          }\n        }]\n      },\n      elements: {\n        point: {\n          radius: 0,\n          hitRadius: 10,\n          hoverRadius: 4,\n          hoverBorderWidth: 3\n        }\n      }\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(CChartLine, {\n    style: {\n      height: \"300px\",\n      marginTop: \"40px\"\n    },\n    datasets: defaultDatasets,\n    options: defaultOptions,\n    labels: xAxis,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default MainChart;","map":{"version":3,"sources":["/home/tiko/Desktop/Ready/Sandbox/src/components/Chart.js"],"names":["React","CChartLine","getStyle","hexToRgba","brandInfo","initialState","xAxis","yAxis","MainChart","chartData","useState","setState","useEffect","reduce","acc","first","second","push","defaultDatasets","elements","data","i","label","backgroundColor","borderColor","pointHoverBackgroundColor","borderWidth","defaultOptions","maintainAspectRatio","legend","display","scales","xAxes","gridLines","drawOnChartArea","yAxes","ticks","beginAtZero","maxTicksLimit","stepSize","Math","ceil","max","point","radius","hitRadius","hoverRadius","hoverBorderWidth","height","marginTop"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { CChartLine } from \"@coreui/react-chartjs\";\nimport { getStyle, hexToRgba } from \"@coreui/utils/src\";\n\nconst brandInfo = getStyle(\"info\") || \"#20a8d8\";\nconst initialState = { xAxis: [], yAxis: [] };\nconst MainChart = ({ chartData }) => {\n  const [{ xAxis, yAxis }, setState] = React.useState(initialState);\n  React.useEffect(() => {\n    setState(\n      chartData.reduce(\n        (acc, [first, second]) => {\n          acc.xAxis.push(first);\n          acc.yAxis.push(second);\n          return acc;\n        },\n        { xAxis: [], yAxis: [] }\n      )\n    );\n  }, [chartData]);\n\n  const defaultDatasets = (() => {\n    let elements = 27;\n    const data = [];\n    for (let i = 0; i <= elements; i++) {\n      data.push(...yAxis);\n    }\n\n    return [\n      {\n        label: \"My First dataset\",\n        backgroundColor: hexToRgba(brandInfo, 10),\n        borderColor: brandInfo,\n        pointHoverBackgroundColor: brandInfo,\n        borderWidth: 2,\n        data: data,\n      },\n    ];\n  })();\n\n  const defaultOptions = (() => {\n    return {\n      maintainAspectRatio: false,\n      legend: {\n        display: false,\n      },\n      scales: {\n        xAxes: [\n          {\n            gridLines: {\n              drawOnChartArea: false,\n            },\n          },\n        ],\n        yAxes: [\n          {\n            ticks: {\n              beginAtZero: true,\n              maxTicksLimit: 5,\n              stepSize: Math.ceil(250 / 5),\n              max: 2000,\n            },\n            gridLines: {\n              display: true,\n            },\n          },\n        ],\n      },\n      elements: {\n        point: {\n          radius: 0,\n          hitRadius: 10,\n          hoverRadius: 4,\n          hoverBorderWidth: 3,\n        },\n      },\n    };\n  })();\n\n  return (\n    <CChartLine\n      style={{ height: \"300px\", marginTop: \"40px\" }}\n      datasets={defaultDatasets}\n      options={defaultOptions}\n      labels={xAxis}\n    />\n  );\n};\n\nexport default MainChart;\n"]},"metadata":{},"sourceType":"module"}